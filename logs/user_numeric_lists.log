2023-09-09 22:26:34,807 =============================================================
2023-09-09 22:26:34,807 =============================================================
2023-09-09 22:26:34,808 Today is 2023-09-09 at 10:26 PM
2023-09-09 22:26:34,888 This file is running on: nt Windows 10
2023-09-09 22:26:34,888 The Python version is: 3.11.4
2023-09-09 22:26:34,888 The active conda environment is:  None
2023-09-09 22:26:34,888 The active pip environment is:    None
2023-09-09 22:26:34,889 The active environment path is:   C:\Users\Valer\AppData\Local\Programs\Python\Python311
2023-09-09 22:26:34,889 The current working directory is: C:\Users\Valer\Desktop\Lesson01\datafun-03-datatypes
2023-09-09 22:26:34,889 This source file is in:           c:\Users\Valer\Desktop\Lesson01\datafun-03-datatypes
2023-09-09 22:26:34,889 =============================================================
2023-09-09 22:26:34,890 =============================================================
2023-09-09 22:26:34,890 CALLING measures of central tendency
2023-09-09 22:26:34,890 donations: [1, 2, 3, 4, 16, 22, 34, 45, 87, 94, 32, 21, 14, 19, 25, 75, 80, 90, 70, 15, 55, 45, 23, 65]
2023-09-09 22:26:34,890 range to 10: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2023-09-09 22:26:34,895 donations mean: [1, 2, 3, 4, 16, 22, 34, 45, 87, 94, 32, 21, 14, 19, 25, 75, 80, 90, 70, 15, 55, 45, 23, 65]
2023-09-09 22:26:34,895 donations median: [1, 2, 3, 4, 16, 22, 34, 45, 87, 94, 32, 21, 14, 19, 25, 75, 80, 90, 70, 15, 55, 45, 23, 65]
2023-09-09 22:26:34,895 donations mode: [1, 2, 3, 4, 16, 22, 34, 45, 87, 94, 32, 21, 14, 19, 25, 75, 80, 90, 70, 15, 55, 45, 23, 65]
2023-09-09 22:26:34,895 listx mean: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2023-09-09 22:26:34,895 listx median: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2023-09-09 22:26:34,895 listx mode: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2023-09-09 22:26:34,896 listy mean: [4, 3, 3, 2, 4, 7, 8, 9, 5, 3]
2023-09-09 22:26:34,896 listy median: [4, 3, 3, 2, 4, 7, 8, 9, 5, 3]
2023-09-09 22:26:34,896 listy mode: [4, 3, 3, 2, 4, 7, 8, 9, 5, 3]
2023-09-09 22:26:34,896 donations var: [1, 2, 3, 4, 16, 22, 34, 45, 87, 94, 32, 21, 14, 19, 25, 75, 80, 90, 70, 15, 55, 45, 23, 65]
2023-09-09 22:26:34,896 donations stdev: [1, 2, 3, 4, 16, 22, 34, 45, 87, 94, 32, 21, 14, 19, 25, 75, 80, 90, 70, 15, 55, 45, 23, 65]
2023-09-09 22:26:34,896 listx var: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2023-09-09 22:26:34,896 listx stdev: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2023-09-09 22:26:34,896 listy var: [4, 3, 3, 2, 4, 7, 8, 9, 5, 3]
2023-09-09 22:26:34,896 listy stdev: [4, 3, 3, 2, 4, 7, 8, 9, 5, 3]
2023-09-09 22:26:34,897 CALLING correlation and prediction
2023-09-09 22:26:34,897 listx: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2023-09-09 22:26:34,897 listy: [4, 3, 3, 2, 4, 7, 8, 9, 5, 3]
2023-09-09 22:26:34,897 correlation between x and y: 0.429147123880256
2023-09-09 22:26:34,898 slope of listx and listy: 0.3393939393939394
2023-09-09 22:26:34,898 intercept of listx and listy: 2.933333333333333
2023-09-09 22:26:34,898 the equation of best fit line is: y=0.3393939393939394x +2.933333333333333
2023-09-09 22:26:34,898 when the value of x = 15, y will be approximately 8.024242424242424
2023-09-09 22:26:34,898 CALLING list basic functions
2023-09-09 22:26:34,898 minimum of list 1: 1
2023-09-09 22:26:34,898 minimum of list x: 1
2023-09-09 22:26:34,899 minimum of list y: 2
2023-09-09 22:26:34,899 maximum of list 1: 94
2023-09-09 22:26:34,899 maximum of list x: 10
2023-09-09 22:26:34,899 maximum of list y: 9
2023-09-09 22:26:34,899 length of list 1: 24
2023-09-09 22:26:34,899 length of list x: 10
2023-09-09 22:26:34,899 length of list y: 10
2023-09-09 22:26:34,899 sum of list 1: 937
2023-09-09 22:26:34,899 sum of list x: 55
2023-09-09 22:26:34,900 sum of list y: 48
2023-09-09 22:26:34,900 average of list 1: 39.041666666666664
2023-09-09 22:26:34,900 average of list x: 5.5
2023-09-09 22:26:34,900 average of list y: 4.8
2023-09-09 22:26:34,900 the set of list 1 is: {1, 2, 3, 4, 14, 15, 16, 19, 21, 22, 23, 25, 32, 34, 45, 55, 65, 70, 75, 80, 87, 90, 94}
2023-09-09 22:26:34,900 the set of list x is: {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
2023-09-09 22:26:34,901 the set of list y is: {2, 3, 4, 5, 7, 8, 9}
2023-09-09 22:26:34,901 list 1 sorted is: [1, 2, 3, 4, 14, 15, 16, 19, 21, 22, 23, 25, 32, 34, 45, 45, 55, 65, 70, 75, 80, 87, 90, 94]
2023-09-09 22:26:34,901 list x sorted is: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
2023-09-09 22:26:34,901 list y sorted is: [2, 3, 3, 3, 4, 4, 5, 7, 8, 9]
2023-09-09 22:26:34,901 list 1 reversed is: [94, 90, 87, 80, 75, 70, 65, 55, 45, 45, 34, 32, 25, 23, 22, 21, 19, 16, 15, 14, 4, 3, 2, 1]
2023-09-09 22:26:34,901 list x reversed is : [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
2023-09-09 22:26:34,901 list y reversed is: [9, 8, 7, 5, 4, 4, 3, 3, 3, 2]
2023-09-09 22:26:34,902 CALLING list methods
2023-09-09 22:26:34,902 lst short list = [6, 3, 2, 7, 4]
2023-09-09 22:26:34,902 after append(5), lst short list =[6, 3, 2, 7, 4, 5]
2023-09-09 22:26:34,902 after extend([8,1,9]), lst short list=[6, 3, 2, 7, 4, 5, 8, 1, 9]
2023-09-09 22:26:34,902 after insert(2,11), lst short list =[6, 3, 11, 2, 7, 4, 5, 8, 1, 9]
2023-09-09 22:26:34,902 after removing(5), lst short list = [6, 3, 11, 2, 7, 4, 8, 1, 9]
2023-09-09 22:26:34,902 count of 2 in lst = 1
2023-09-09 22:26:34,903 after list sort(), lst short list = [1, 2, 3, 4, 6, 7, 8, 9, 11]
2023-09-09 22:26:34,903 after reverse list sort(reverse=True), lst short list = [11, 9, 8, 7, 6, 4, 3, 2, 1]
2023-09-09 22:26:34,903 copy of lst short list = [11, 9, 8, 7, 6, 4, 3, 2, 1]
2023-09-09 22:26:34,903 after popping first item from lst 11, lst short list = [9, 8, 7, 6, 4, 3, 2, 1]
2023-09-09 22:26:34,903 after popping last item from lst 1, lst short list = [9, 8, 7, 6, 4, 3, 2]
2023-09-09 22:26:34,903 CALLING apply filter and map
2023-09-09 22:26:34,903 filtered list (x < 4): [1, 2, 3]
2023-09-09 22:26:34,904 cubed root list: [1.0, 1.2599210498948732, 1.4422495703074083, 1.5874010519681994, 2.5198420997897464, 2.802039330655387, 3.239611801277483, 3.5568933044900626, 4.431047621693634, 4.546835943776344, 3.1748021039363987, 2.7589241763811203, 2.4101422641752297, 2.668401648721945, 2.924017738212866, 4.217163326508746, 4.308869380063767, 4.481404746557164, 4.121285299808556, 2.46621207433047, 3.802952460761391, 3.5568933044900626, 2.8438669798515654, 4.020725758589058]
2023-09-09 22:26:34,904 cubed volume list: [1, 8, 27, 64, 4096, 10648, 39304, 91125, 658503, 830584, 32768, 9261, 2744, 6859, 15625, 421875, 512000, 729000, 343000, 3375, 166375, 91125, 12167, 274625]
2023-09-09 22:26:34,904 CALLING apply list comprehension
2023-09-09 22:26:34,904 filtered list comprehension (x < 4), [1, 2, 3]
2023-09-09 22:26:34,904 triple list comprehension (x * 3), [3, 6, 9, 12, 48, 66, 102, 135, 261, 282, 96, 63, 42, 57, 75, 225, 240, 270, 210, 45, 165, 135, 69, 195]
2023-09-09 22:26:34,904 custom list comprehension (x * 2), [2, 4, 6, 8, 32, 44, 68, 90, 174, 188, 64, 42, 28, 38, 50, 150, 160, 180, 140, 30, 110, 90, 46, 130]
